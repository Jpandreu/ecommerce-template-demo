/* ==========================================================================
   Ecommerce Template - Pages Bundle
   Consolidated: products.js, services.js, services-mobile.js, mobile-paypal-checkout.js, 
   mobile-direct-payment.js, universal-cart-fix.js, testimonials-dots-fix.js
   ========================================================================== */

// PRODUCTS.JS ESSENTIAL CONTENT
(function() {
    // Configuration
    const PRODUCTS_PER_PAGE = 6;
    let currentPage = 1;
    let totalProducts = 0;
    
    // Global protection against multiple script loading
    if (!window.ECOMMERCE_SCRIPTS_LOADED) {
        window.ECOMMERCE_SCRIPTS_LOADED = {};
    }
    
    let isProductsPageInitialized = false;
    
    // Initialize when DOM is ready  
    document.addEventListener('DOMContentLoaded', function() {
        if (window.ECOMMERCE_SCRIPTS_LOADED.productsJs || isProductsPageInitialized) {
            console.log('Products page already initialized, skipping...');
            return;
        }
        if (document.body.classList.contains('products-page') || document.querySelector('.products-grid')) {
            window.ECOMMERCE_SCRIPTS_LOADED.productsJs = true;
            initProductsPage();
        }
    });
    
    // Main initialization function
    function initProductsPage() {
        if (isProductsPageInitialized) return;
        isProductsPageInitialized = true;
        
        console.log('Initializing Products page - single instance');
        
        initFilters();
        initProductGrid();
        initQuickView();
        initCartFunctionality();
        initPagination();
        initViewSwitcher();
        initSorting();
        
        console.log('Products page initialized successfully');
    }
    
    // Initialize filters
    function initFilters() {
        const filterButtons = document.querySelectorAll('.filter-btn');
        const priceRange = document.querySelector('#priceRange');
        
        filterButtons.forEach(btn => {
            btn.addEventListener('click', function() {
                // Remove active class from all buttons
                filterButtons.forEach(b => b.classList.remove('active'));
                // Add active class to clicked button
                this.classList.add('active');
                
                const category = this.dataset.category;
                filterProducts(category);
            });
        });
        
        if (priceRange) {
            priceRange.addEventListener('input', function() {
                const maxPrice = this.value;
                filterByPrice(maxPrice);
            });
        }
    }
    
    // Filter products by category
    function filterProducts(category) {
        const products = document.querySelectorAll('.product-item');
        
        products.forEach(product => {
            if (category === 'all' || product.dataset.category === category) {
                product.style.display = 'block';
            } else {
                product.style.display = 'none';
            }
        });
        
        updateProductCount();
    }
    
    // Filter products by price
    function filterByPrice(maxPrice) {
        const products = document.querySelectorAll('.product-item');
        
        products.forEach(product => {
            const price = parseFloat(product.dataset.productPrice || '0');
            if (price <= maxPrice) {
                product.style.display = 'block';
            } else {
                product.style.display = 'none';
            }
        });
        
        updateProductCount();
    }
    
    // Initialize product grid
    function initProductGrid() {
        const products = document.querySelectorAll('.product-item');
        products.forEach(product => {
            // Add hover effects
            product.addEventListener('mouseenter', function() {
                this.style.transform = 'translateY(-5px)';
            });
            
            product.addEventListener('mouseleave', function() {
                this.style.transform = 'translateY(0)';
            });
        });
    }
    
    // Initialize quick view
    function initQuickView() {
        const quickViewBtns = document.querySelectorAll('.quick-view-btn');
        
        quickViewBtns.forEach(btn => {
            btn.addEventListener('click', function(e) {
                e.preventDefault();
                const productId = this.dataset.productId;
                openQuickView(productId);
            });
        });
    }
    
    // Open quick view modal
    function openQuickView(productId) {
        // Implementation for quick view modal
        console.log(`Opening quick view for product: ${productId}`);
    }
    
    // Initialize cart functionality
    function initCartFunctionality() {
        const addToCartBtns = document.querySelectorAll('.add-to-cart-btn');
        
        addToCartBtns.forEach(btn => {
            btn.addEventListener('click', function(e) {
                e.preventDefault();
                const productId = this.dataset.productId;
                const quantity = parseInt(this.dataset.quantity || '1');
                
                if (window.cartManager) {
                    window.cartManager.addToCart(productId, quantity);
                }
            });
        });
    }
    
    // Initialize pagination
    function initPagination() {
        const paginationBtns = document.querySelectorAll('.pagination-btn');
        
        paginationBtns.forEach(btn => {
            btn.addEventListener('click', function(e) {
                e.preventDefault();
                const page = parseInt(this.dataset.page);
                if (page && page !== currentPage) {
                    goToPage(page);
                }
            });
        });
    }
    
    // Go to specific page
    function goToPage(page) {
        currentPage = page;
        const products = document.querySelectorAll('.product-item');
        const startIndex = (page - 1) * PRODUCTS_PER_PAGE;
        const endIndex = startIndex + PRODUCTS_PER_PAGE;
        
        products.forEach((product, index) => {
            if (index >= startIndex && index < endIndex) {
                product.style.display = 'block';
            } else {
                product.style.display = 'none';
            }
        });
        
        updatePaginationButtons();
    }
    
    // Update pagination buttons
    function updatePaginationButtons() {
        const paginationBtns = document.querySelectorAll('.pagination-btn');
        
        paginationBtns.forEach(btn => {
            const page = parseInt(btn.dataset.page);
            if (page === currentPage) {
                btn.classList.add('active');
            } else {
                btn.classList.remove('active');
            }
        });
    }
    
    // Initialize view switcher
    function initViewSwitcher() {
        const viewBtns = document.querySelectorAll('.view-btn');
        
        viewBtns.forEach(btn => {
            btn.addEventListener('click', function() {
                const view = this.dataset.view;
                switchView(view);
                
                viewBtns.forEach(b => b.classList.remove('active'));
                this.classList.add('active');
            });
        });
    }
    
    // Switch between grid and list view
    function switchView(view) {
        const productsGrid = document.querySelector('.products-grid');
        if (!productsGrid) return;
        
        if (view === 'list') {
            productsGrid.classList.add('list-view');
        } else {
            productsGrid.classList.remove('list-view');
        }
    }
    
    // Initialize sorting
    function initSorting() {
        const sortSelect = document.querySelector('#sortProducts');
        
        if (sortSelect) {
            sortSelect.addEventListener('change', function() {
                const sortBy = this.value;
                sortProducts(sortBy);
            });
        }
    }
    
    // Sort products
    function sortProducts(sortBy) {
        const productsGrid = document.querySelector('.products-grid');
        const products = Array.from(document.querySelectorAll('.product-item'));
        
        products.sort((a, b) => {
            switch (sortBy) {
                case 'price-low':
                    return parseFloat(a.dataset.productPrice || '0') - parseFloat(b.dataset.productPrice || '0');
                case 'price-high':
                    return parseFloat(b.dataset.productPrice || '0') - parseFloat(a.dataset.productPrice || '0');
                case 'name':
                    return (a.dataset.productName || '').localeCompare(b.dataset.productName || '');
                default:
                    return 0;
            }
        });
        
        // Re-append sorted products
        products.forEach(product => {
            productsGrid.appendChild(product);
        });
    }
    
    // Update products counter
    function updateProductCount() {
        const visibleProducts = document.querySelectorAll('.product-item:not([style*="display: none"])').length;
        totalProducts = document.querySelectorAll('.product-item').length;
        
        const countElement = document.querySelector('.products-count');
        if (countElement) {
            countElement.textContent = `Showing ${visibleProducts} of ${totalProducts} products`;
        }
    }
})();

// SERVICES.JS CONTENT
(function() {
    document.addEventListener('DOMContentLoaded', function() {
        if (document.body.classList.contains('services-page') || document.querySelector('.services-grid')) {
            initServicesPage();
        }
    });
    
    function initServicesPage() {
        console.log('Initializing Services page');
        
        initServiceCards();
        initContactForms();
        initServiceModals();
        
        console.log('Services page initialized successfully');
    }
    
    function initServiceCards() {
        const serviceCards = document.querySelectorAll('.service-card');
        
        serviceCards.forEach(card => {
            card.addEventListener('mouseenter', function() {
                this.style.transform = 'translateY(-10px)';
            });
            
            card.addEventListener('mouseleave', function() {
                this.style.transform = 'translateY(0)';
            });
        });
    }
    
    function initContactForms() {
        const contactForms = document.querySelectorAll('.contact-form');
        
        contactForms.forEach(form => {
            form.addEventListener('submit', function(e) {
                e.preventDefault();
                
                // Basic form validation
                const requiredFields = form.querySelectorAll('[required]');
                let isValid = true;
                
                requiredFields.forEach(field => {
                    if (!field.value.trim()) {
                        isValid = false;
                        field.classList.add('error');
                    } else {
                        field.classList.remove('error');
                    }
                });
                
                if (isValid) {
                    // Submit form or show success message
                    showNotification('Message sent successfully!', 'success');
                    form.reset();
                } else {
                    showNotification('Please fill in all required fields.', 'error');
                }
            });
        });
    }
    
    function initServiceModals() {
        const serviceButtons = document.querySelectorAll('.service-btn');
        
        serviceButtons.forEach(btn => {
            btn.addEventListener('click', function(e) {
                e.preventDefault();
                const serviceId = this.dataset.service;
                openServiceModal(serviceId);
            });
        });
    }
    
    function openServiceModal(serviceId) {
        console.log(`Opening service modal for: ${serviceId}`);
        // Implementation for service modal
    }
    
    function showNotification(message, type = 'info') {
        const notification = document.createElement('div');
        notification.className = `notification ${type}`;
        notification.innerHTML = `
            <span>${message}</span>
            <button class="close-notification">&times;</button>
        `;
        
        document.body.appendChild(notification);
        
        setTimeout(() => {
            if (notification.parentNode) {
                notification.parentNode.removeChild(notification);
            }
        }, 3000);
        
        notification.querySelector('.close-notification').addEventListener('click', () => {
            notification.parentNode.removeChild(notification);
        });
    }
})();

// UNIVERSAL CART FIX
(function() {
    document.addEventListener('DOMContentLoaded', function() {
        // Fix cart counter across all pages
        if (window.updateGlobalCartCount) {
            window.updateGlobalCartCount();
        }
        
        // Fix add to cart buttons on all pages
        const addToCartBtns = document.querySelectorAll('.add-to-cart-btn:not([data-initialized])');
        
        addToCartBtns.forEach(btn => {
            btn.setAttribute('data-initialized', 'true');
            btn.addEventListener('click', function(e) {
                e.preventDefault();
                const productId = this.dataset.productId;
                const quantity = parseInt(this.dataset.quantity || '1');
                
                if (window.cartManager) {
                    if (window.cartManager.addToCart(productId, quantity)) {
                        this.textContent = 'Added!';
                        this.classList.add('added');
                        
                        setTimeout(() => {
                            this.textContent = 'Add to Cart';
                            this.classList.remove('added');
                        }, 2000);
                    }
                }
            });
        });
    });
})();

// TESTIMONIALS DOTS FIX
(function() {
    document.addEventListener('DOMContentLoaded', function() {
        const testimonialsSlider = document.querySelector('.testimonials-slider');
        const dotsContainer = document.querySelector('.testimonials-dots');
        
        if (!testimonialsSlider || !dotsContainer) return;
        
        const testimonials = testimonialsSlider.querySelectorAll('.testimonial-item');
        
        // Create dots
        testimonials.forEach((_, index) => {
            const dot = document.createElement('button');
            dot.className = 'testimonial-dot';
            dot.dataset.slide = index;
            
            if (index === 0) {
                dot.classList.add('active');
            }
            
            dot.addEventListener('click', function() {
                const slideIndex = parseInt(this.dataset.slide);
                goToTestimonial(slideIndex);
                
                // Update active dot
                dotsContainer.querySelectorAll('.testimonial-dot').forEach(d => d.classList.remove('active'));
                this.classList.add('active');
            });
            
            dotsContainer.appendChild(dot);
        });
        
        function goToTestimonial(index) {
            const slideWidth = testimonials[0].offsetWidth;
            testimonialsSlider.style.transform = `translateX(-${index * slideWidth}px)`;
        }
    });
})();

// MOBILE PAYPAL CHECKOUT FIX
(function() {
    document.addEventListener('DOMContentLoaded', function() {
        if (document.querySelector('#paypal-button-container')) {
            initMobilePayPal();
        }
    });
    
    function initMobilePayPal() {
        console.log('Initializing mobile PayPal checkout');
        
        // Mobile-specific PayPal optimizations
        const paypalContainer = document.querySelector('#paypal-button-container');
        
        if (window.innerWidth <= 768) {
            paypalContainer.style.maxWidth = '100%';
            paypalContainer.style.padding = '10px';
        }
        
        // Update payment instructions for mobile
        const unifiedInstructions = document.getElementById('unifiedPaymentInstructions');
        if (unifiedInstructions && window.innerWidth <= 768) {
            unifiedInstructions.innerHTML = '<p><i class="fas fa-hand-pointer"></i> Select your payment method above</p>';
        }
    }
})();