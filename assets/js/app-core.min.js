/* ==========================================================================
   Ecommerce Template - Core Application Bundle
   Consolidated: polyfills.js, analytics.js, image-loader.js, cart-sync.js, main.js
   ========================================================================== */

// POLYFILLS.JS CONTENT
(function() {
    // Element.closest polyfill for older browsers
    if (!Element.prototype.matches) {
        Element.prototype.matches = Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;
    }

    if (!Element.prototype.closest) {
        Element.prototype.closest = function(s) {
            var el = this;
            if (!document.documentElement.contains(el)) return null;
            do {
                if (el.matches(s)) return el;
                el = el.parentElement || el.parentNode;
            } while (el !== null && el.nodeType === 1);
            return null;
        };
    }

    // requestAnimationFrame polyfill
    (function() {
        var lastTime = 0;
        var vendors = ['ms', 'moz', 'webkit', 'o'];
        for(var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {
            window.requestAnimationFrame = window[vendors[x]+'RequestAnimationFrame'];
            window.cancelAnimationFrame = window[vendors[x]+'CancelAnimationFrame'] 
                                       || window[vendors[x]+'CancelRequestAnimationFrame'];
        }

        if (!window.requestAnimationFrame)
            window.requestAnimationFrame = function(callback, element) {
                var currTime = new Date().getTime();
                var timeToCall = Math.max(0, 16 - (currTime - lastTime));
                var id = window.setTimeout(function() { callback(currTime + timeToCall); }, 
                  timeToCall);
                lastTime = currTime + timeToCall;
                return id;
            };

        if (!window.cancelAnimationFrame)
            window.cancelAnimationFrame = function(id) {
                clearTimeout(id);
            };
    }());

    // Array.from polyfill
    if (!Array.from) {
        Array.from = function(object) {
            return [].slice.call(object);
        };
    }
})();

// ANALYTICS.JS CONTENT
(function() {
    /*
     * Google Analytics 4 Configuration
     * Facebook Pixel Configuration
     * Google Tag Manager Integration
     */
    
    // Google Analytics 4 Configuration
    window.dataLayer = window.dataLayer || [];
    function gtag(){dataLayer.push(arguments);}
    gtag('js', new Date());
    
    // Configure your GA4 measurement ID here
    // gtag('config', 'GA_MEASUREMENT_ID');
    
    // E-commerce events
    function trackPurchase(transactionId, items, value) {
        if (typeof gtag === 'function') {
            gtag('event', 'purchase', {
                transaction_id: transactionId,
                value: value,
                currency: 'USD',
                items: items
            });
        }
    }
    
    function trackAddToCart(items) {
        if (typeof gtag === 'function') {
            gtag('event', 'add_to_cart', {
                currency: 'USD',
                value: items.reduce((sum, item) => sum + (item.price * item.quantity), 0),
                items: items
            });
        }
    }
    
    function trackViewItem(item) {
        if (typeof gtag === 'function') {
            gtag('event', 'view_item', {
                currency: 'USD',
                value: item.price,
                items: [item]
            });
        }
    }
    
    function trackBeginCheckout(items) {
        if (typeof gtag === 'function') {
            gtag('event', 'begin_checkout', {
                currency: 'USD',
                value: items.reduce((sum, item) => sum + (item.price * item.quantity), 0),
                items: items
            });
        }
    }
    
    // Facebook Pixel Configuration
    // Replace 'YOUR_PIXEL_ID' with your actual Facebook Pixel ID
    /*
    !function(f,b,e,v,n,t,s)
    {if(f.fbq)return;n=f.fbq=function(){n.callMethod?
    n.callMethod.apply(n,arguments):n.queue.push(arguments)};
    if(!f._fbq)f._fbq=n;n.push=n;n.loaded=!0;n.version='2.0';
    n.queue=[];t=b.createElement(e);t.async=!0;
    t.src=v;s=b.getElementsByTagName(e)[0];
    s.parentNode.insertBefore(t,s)}(window, document,'script',
    'https://connect.facebook.net/en_US/fbevents.js');
    
    fbq('init', 'YOUR_PIXEL_ID');
    fbq('track', 'PageView');
    */
    
    // Make functions globally available
    window.ecommerceAnalytics = {
        trackPurchase,
        trackAddToCart,
        trackViewItem,
        trackBeginCheckout
    };
})();

// IMAGE-LOADER.JS CONTENT
(function() {
    let imageLoadingQueue = [];
    let isProcessing = false;
    
    function processImageQueue() {
        if (isProcessing || imageLoadingQueue.length === 0) return;
        
        isProcessing = true;
        const item = imageLoadingQueue.shift();
        
        loadSingleImage(item.src, item.fallback)
            .then(src => {
                if (item.img && item.img.parentNode) {
                    item.img.src = src;
                    item.img.classList.remove('loading');
                    item.img.classList.add('loaded');
                }
                isProcessing = false;
                setTimeout(processImageQueue, 50);
            })
            .catch(() => {
                isProcessing = false;
                setTimeout(processImageQueue, 50);
            });
    }
    
    function loadSingleImage(src, fallback = './assets/images/placeholder.jpg') {
        return new Promise((resolve) => {
            const testImg = new Image();
            testImg.onload = () => resolve(src);
            testImg.onerror = () => resolve(fallback);
            testImg.src = src;
        });
    }
    
    function lazyLoadImage(img, fallback = './assets/images/placeholder.jpg') {
        const src = img.dataset.src || img.src;
        
        img.classList.add('loading');
        
        imageLoadingQueue.push({
            img: img,
            src: src,
            fallback: fallback
        });
        
        processImageQueue();
    }
    
    function initLazyLoading() {
        const images = document.querySelectorAll('img[data-src], img.lazy-load');
        
        if ('IntersectionObserver' in window) {
            const imageObserver = new IntersectionObserver((entries) => {
                entries.forEach(entry => {
                    if (entry.isIntersecting) {
                        const img = entry.target;
                        lazyLoadImage(img);
                        imageObserver.unobserve(img);
                    }
                });
            });
            
            images.forEach(img => imageObserver.observe(img));
        } else {
            images.forEach(img => lazyLoadImage(img));
        }
    }
    
    // Make functions globally available
    window.imageLoader = {
        lazyLoadImage,
        loadSingleImage,
        initLazyLoading
    };
    
    // Auto-initialize on DOM ready
    if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', initLazyLoading);
    } else {
        initLazyLoading();
    }
})();

// CART-SYNC.JS CONTENT
(function() {
    'use strict';
    
    // Function to update cart count display
    function updateGlobalCartCount() {
        const savedCart = localStorage.getItem('shopping-cart');
        const cart = savedCart ? JSON.parse(savedCart) : [];
        const totalItems = cart.reduce((total, item) => total + item.quantity, 0);
        
        const cartCount = document.querySelector('.cart-count');
        if (cartCount) {
            // Update count text and data attribute
            cartCount.textContent = totalItems;
            cartCount.setAttribute('data-count', totalItems);
            
            // Show/hide badge based on count
            if (totalItems > 0) {
                cartCount.style.display = 'flex';
            } else {
                cartCount.style.display = 'none';
            }
        }
    }
    
    // Initialize on DOM load
    document.addEventListener('DOMContentLoaded', function() {
        updateGlobalCartCount();
        
        // Listen for storage changes from other tabs/pages
        window.addEventListener('storage', function(e) {
            if (e.key === 'shopping-cart') {
                updateGlobalCartCount();
            }
        });
        
        // Listen for custom cart update events
        document.addEventListener('cartUpdated', function() {
            updateGlobalCartCount();
        });
    });
    
    // Expose function globally
    window.updateGlobalCartCount = updateGlobalCartCount;
    
    // Custom event to trigger cart updates
    window.triggerCartUpdate = function() {
        const event = new CustomEvent('cartUpdated');
        document.dispatchEvent(event);
    };
})();

// MAIN.JS ESSENTIAL CONTENT
(function() {
    // Global configuration
    let currentSlide = 0;
    
    // Global protection against multiple script loading
    if (!window.ECOMMERCE_SCRIPTS_LOADED) {
        window.ECOMMERCE_SCRIPTS_LOADED = {};
    }
    
    // Prevent multiple initializations
    let isMainJsInitialized = false;
    
    // Safari mobile viewport fix
    function fixSafariMobileViewport() {
        const vh = window.innerHeight * 0.01;
        document.documentElement.style.setProperty('--vh', `${vh}px`);
        
        // Listen to resize events
        window.addEventListener('resize', () => {
            const vh = window.innerHeight * 0.01;
            document.documentElement.style.setProperty('--vh', `${vh}px`);
        });
        
        // Safari-specific orientation change handling
        window.addEventListener('orientationchange', () => {
            setTimeout(() => {
                const vh = window.innerHeight * 0.01;
                document.documentElement.style.setProperty('--vh', `${vh}px`);
            }, 100);
        });
    }
    
    // Mobile menu functionality
    function initMobileMenu() {
        console.log('🍎 Initializing Mobile Menu...');
        
        const mobileMenuBtn = document.getElementById('mobileMenuBtn') || 
                              document.querySelector('.mobile-menu-btn') ||
                              document.querySelector('.navbar-toggler');
        const nav = document.getElementById('nav') || 
                    document.querySelector('.navbar-collapse') ||
                    document.querySelector('.nav');
        
        if (!mobileMenuBtn || !nav) {
            console.error('❌ Mobile menu elements not found');
            return;
        }
        
        console.log('✅ Mobile menu elements found');
        
        // Remove any existing event listeners
        const newMobileMenuBtn = mobileMenuBtn.cloneNode(true);
        mobileMenuBtn.parentNode.replaceChild(newMobileMenuBtn, mobileMenuBtn);
        
        const handleMenuToggle = (e) => {
            e.preventDefault();
            e.stopPropagation();
            
            const isOpen = nav.classList.contains('mobile-open') || nav.classList.contains('show');
            
            if (isOpen) {
                closeMobileMenu();
            } else {
                openMobileMenu();
            }
        };
        
        newMobileMenuBtn.addEventListener('click', handleMenuToggle);
        newMobileMenuBtn.addEventListener('touchend', handleMenuToggle, { passive: false });
        
        // Close menu when clicking on a link
        const navLinks = nav.querySelectorAll('.nav-link');
        navLinks.forEach(link => {
            link.addEventListener('click', closeMobileMenu);
            link.addEventListener('touchend', closeMobileMenu, { passive: false });
        });
        
        // Close menu when clicking outside
        document.addEventListener('click', function(e) {
            if (!nav.contains(e.target) && !newMobileMenuBtn.contains(e.target)) {
                closeMobileMenu();
            }
        });
    }
    
    function openMobileMenu() {
        const nav = document.getElementById('nav') || 
                    document.querySelector('.navbar-collapse') ||
                    document.querySelector('.nav');
        const mobileMenuBtn = document.getElementById('mobileMenuBtn') ||
                              document.querySelector('.mobile-menu-btn') ||
                              document.querySelector('.navbar-toggler');
        
        if (!nav || !mobileMenuBtn) return;
        
        if (nav.classList.contains('navbar-collapse')) {
            nav.classList.add('show');
            mobileMenuBtn.classList.remove('collapsed');
            mobileMenuBtn.setAttribute('aria-expanded', 'true');
        } else {
            nav.classList.add('mobile-open');
            mobileMenuBtn.classList.add('active');
        }
    }
    
    function closeMobileMenu() {
        const nav = document.getElementById('nav') || 
                    document.querySelector('.navbar-collapse') ||
                    document.querySelector('.nav');
        const mobileMenuBtn = document.getElementById('mobileMenuBtn') ||
                              document.querySelector('.mobile-menu-btn') ||
                              document.querySelector('.navbar-toggler');
        
        if (!nav || !mobileMenuBtn) return;
        
        if (nav.classList.contains('navbar-collapse')) {
            nav.classList.remove('show');
            mobileMenuBtn.classList.add('collapsed');
            mobileMenuBtn.setAttribute('aria-expanded', 'false');
        } else {
            nav.classList.remove('mobile-open');
            mobileMenuBtn.classList.remove('active');
        }
    }
    
    // Smooth scrolling
    function initSmoothScrolling() {
        const links = document.querySelectorAll('a[href^="#"]');
        links.forEach(link => {
            link.addEventListener('click', function(e) {
                const href = this.getAttribute('href');
                if (href === '#') return;
                
                const targetElement = document.querySelector(href);
                if (targetElement) {
                    e.preventDefault();
                    targetElement.scrollIntoView({ 
                        behavior: 'smooth',
                        block: 'start'
                    });
                }
            });
        });
    }
    
    // Header scroll effect
    function initHeaderScroll() {
        const header = document.querySelector('.navbar, .header');
        if (!header) return;
        
        let lastScrollY = window.scrollY;
        
        window.addEventListener('scroll', () => {
            const currentScrollY = window.scrollY;
            
            if (currentScrollY > 100) {
                header.classList.add('scrolled');
            } else {
                header.classList.remove('scrolled');
            }
            
            lastScrollY = currentScrollY;
        });
    }
    
    // Back to top button
    function initBackToTop() {
        const backToTop = document.querySelector('.back-to-top');
        if (!backToTop) return;
        
        window.addEventListener('scroll', () => {
            if (window.scrollY > 300) {
                backToTop.style.display = 'block';
            } else {
                backToTop.style.display = 'none';
            }
        });
        
        backToTop.addEventListener('click', (e) => {
            e.preventDefault();
            window.scrollTo({ top: 0, behavior: 'smooth' });
        });
    }
    
    // Main initialization function
    function initializeApp() {
        if (isMainJsInitialized) return;
        if (window.ECOMMERCE_SCRIPTS_LOADED.mainJs) return;
        
        window.ECOMMERCE_SCRIPTS_LOADED.mainJs = true;
        isMainJsInitialized = true;
        
        console.log('Initializing Main.js - single instance');
        
        // Fix Safari mobile viewport
        fixSafariMobileViewport();
        
        // Initialize AOS if available
        if (typeof AOS !== 'undefined') {
            AOS.init({
                duration: 800,
                easing: 'ease-out',
                once: true,
                offset: 100
            });
        }
        
        // Initialize components
        initMobileMenu();
        initSmoothScrolling();
        initHeaderScroll();
        initBackToTop();
        
        console.log('Core app initialized successfully');
    }
    
    // Initialize when DOM is ready
    document.addEventListener('DOMContentLoaded', function() {
        if (window.ECOMMERCE_SCRIPTS_LOADED.mainJs || isMainJsInitialized) {
            console.log('Main.js already initialized, skipping...');
            return;
        }
        initializeApp();
    });
    
    // Make functions globally available
    window.openMobileMenu = openMobileMenu;
    window.closeMobileMenu = closeMobileMenu;
})();